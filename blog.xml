<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr='http://purl.org/syndication/thread/1.0'>
    <id>tag:blogger.com,1999:blog-854412388978983477</id>
    <updated>2016-10-20T02:03:46.612-07:00</updated>
    <title type='text'>How to make a web content management system</title>
    <subtitle type='html'></subtitle>
    <link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://jcms-consulting.blogspot.com/feeds/posts/default'/>
    <link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/854412388978983477/posts/default'/>
    <link rel='alternate' type='text/html' href='http://jcms-consulting.blogspot.com/'/>
    <link rel='hub' href='http://pubsubhubbub.appspot.com/'/>
    <author>
        <name>jcms-consulting</name>
        <uri>http://www.blogger.com/profile/13228951229513940000</uri>
        <email>noreply@blogger.com</email>
        <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//4.bp.blogspot.com/-Hk0nXcIPm8Y/WAdRJsYwaAI/AAAAAAAAGvM/C0EVdcGr2yc6Qpe6_lvNhNbmhLTBsXEmACK4B/s113/logo-small-padded.jpg'/>
    </author>
    <generator version='7.00' uri='http://www.blogger.com'>Blogger</generator>
    <openSearch:totalResults>3</openSearch:totalResults>
    <openSearch:startIndex>1</openSearch:startIndex>
    <openSearch:itemsPerPage>25</openSearch:itemsPerPage>
    <entry>
        <id>tag:blogger.com,1999:blog-854412388978983477.post-8059760957199890662</id>
        <published>2016-10-19T04:15:00.003-07:00</published>
        <updated>2016-10-19T04:15:37.011-07:00</updated>
        <title type='text'>WCM Database Model: Page objects</title>
        <content type='html'>&lt;h3&gt;Page object table&lt;/h3&gt;In addition to Content items, a website needs a context into which the content will be placed.&lt;br /&gt;&lt;br /&gt;In this discussion, by &#39;Page&#39; I mean an object that connects zero or more Content objects with a HTML Layout template. In other words, the content on it&#39;s own is not displayed because it does not have a presentation defined (&lt;i&gt;ignoring the REST API I added later on&lt;/i&gt;).&lt;br /&gt;&lt;br /&gt;I wanted to allow a &lt;b&gt;single&lt;/b&gt;&amp;nbsp;Content item to be re-purposed in several places if so desired, with appropriate contextual presentation. More on this later when I discuss layouts...&lt;br /&gt;&lt;br /&gt;Further, I did not want the restriction of arbitrary content permanently associated with a given layout.&lt;br /&gt;&lt;br /&gt;Therefore, the concept of this bridge between Content and Layout (&lt;i&gt;and indeed site hierarchy position - more on this later&lt;/i&gt;) was born.&lt;br /&gt;&lt;br /&gt;The database model for the Page object thus became:&lt;br /&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;CREATE TABLE [dbo].[page](&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[id] [int] IDENTITY(1,1) NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[state] [int] NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[name] [varchar](255) NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[linktext] [varchar](255) NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[title] [varchar](255) NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[description] [varchar](255) NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[keywords] [varchar](255) NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[created_date] [datetime] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[created_user] [int] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[updated_date] [datetime] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[updated_user] [int] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[layout_id] [int] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[auth_group] [int] NULL,&lt;br /&gt;)&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Note that there are a few foreign keys here - &lt;b&gt;state&lt;/b&gt;, &lt;b&gt;*_user&lt;/b&gt;, &lt;b&gt;layout_id&lt;/b&gt;, &lt;b&gt;auth_group&lt;/b&gt;. You will note that there is not a foreign key for Content ID. This is deliberate because the actual content needs to be presented &lt;b&gt;in context.&lt;/b&gt;&amp;nbsp;Therefore, the logical place to map content positions is to the template itself, as I will describe in a future post.&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;id - Unique identifier for a given Page object&lt;/li&gt;&lt;li&gt;state - Similar to Content Instance state. Not yet implemented, but intended to allow switching of nodes to various states.&lt;/li&gt;&lt;li&gt;name, linktext, title, description, keywords - Properties of the page, usually rendered to the HTML output.&lt;/li&gt;&lt;li&gt;created_date, created_user - date and user ID when the page node was created&lt;/li&gt;&lt;li&gt;updated_date/user -&amp;nbsp;&amp;nbsp;- date and user ID when the page node was last modified. Intended for use in LAST_MODIFIED HTTP header for cache expiry.&lt;/li&gt;&lt;li&gt;layout_id - The id of a Template - i.e. a HTML layout for that page object. It may be inherited from an ancestor node in the &lt;b&gt;viewtree &lt;/b&gt;(see later article for details).&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;h3&gt;Supplemental tables&lt;/h3&gt;The supplemental tables are as follows.&lt;br /&gt;&lt;h4&gt;State, Users, Groups&lt;/h4&gt;These are the same lookup tables as described in the prior post &#39;&lt;a href=&quot;http://jcms-consulting.blogspot.co.uk/2016/10/wcm-database-model-content-items.html&quot;&gt;Content database tables&lt;/a&gt;&#39;.&lt;br /&gt;&lt;h4&gt;Layout&lt;/h4&gt;&lt;div&gt;This table holds URIs to templates. These are basically text files with HTML markup and CCMS-specific placeholders that will be interpreted as CCMS output, such Content object render locations or bespoke navigation menus based on the viewtree (&lt;i&gt;more on this later&lt;/i&gt;).&lt;br /&gt;&lt;br /&gt;It is also a very simple table:&lt;br /&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;CREATE TABLE [dbo].[layout](&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[id] [int] IDENTITY(1,1) NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[layout_url] [varchar](255) NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[active] [bit] NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[auth_group] [int] NULL,&lt;br /&gt;)&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;Note the &lt;b&gt;active &lt;/b&gt;field - this controls the visibility of the template for selection in the editor interface. Again, the &lt;b&gt;auth_group&lt;/b&gt;&amp;nbsp;field references the Groups lookup table, allowing user permissions to control usage and/or visibility of individual Groups.&lt;br /&gt;&lt;br /&gt;The database model for the Page object shown here allows the association of a page layout (&lt;i&gt;i.e. the physical file referenced by the given Layout table row&lt;/i&gt;) with Content objects rendered in the presentation context that layout.&lt;br /&gt;&lt;br /&gt;The linking of the Content objects with the Layout template is achieved by mapping the content text to a placeholder on the layout template. The placeholders are simply bespoke markup of the form:&lt;br /&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;{CMS_CONTENT_n}&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;where &#39;n&#39; is an integer representing the number of the position.&lt;br /&gt;&lt;br /&gt;The final piece of this content/layout/page mapping is to relate the content by it&#39;s unique ID to a placeholder position on a given layout- remember of course that the layout may be changed by the author.&lt;br /&gt;&lt;br /&gt;This is the topic of the next post.&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</content>
        <link rel='replies' type='application/atom+xml' href='http://jcms-consulting.blogspot.com/feeds/8059760957199890662/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='http://jcms-consulting.blogspot.com/2016/10/wcm-database-model-page-objects.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/854412388978983477/posts/default/8059760957199890662'/>
        <link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/854412388978983477/posts/default/8059760957199890662'/>
        <link rel='alternate' type='text/html' href='http://jcms-consulting.blogspot.com/2016/10/wcm-database-model-page-objects.html' title='WCM Database Model: Page objects'/>
        <author>
            <name>jcms-consulting</name>
            <uri>http://www.blogger.com/profile/13228951229513940000</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//4.bp.blogspot.com/-Hk0nXcIPm8Y/WAdRJsYwaAI/AAAAAAAAGvM/C0EVdcGr2yc6Qpe6_lvNhNbmhLTBsXEmACK4B/s113/logo-small-padded.jpg'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-854412388978983477.post-7774625574862290097</id>
        <published>2016-10-16T09:10:00.000-07:00</published>
        <updated>2016-10-19T04:16:50.159-07:00</updated>
        <title type='text'>WCM Database Model: Content Items</title>
        <content type='html'>Each content item needed a set of core properties - name, workflow state, created date etc. The actual content for each item needed the ability to be versioned&amp;nbsp;as well as needing to exist in various workflow states. These tables are the result of several rounds of change and addition.&lt;br /&gt;&lt;br /&gt;Therefore, pretty much the first thing I did was to design a couple of relational database tables to hold this relationship, with supplemental lookup tables.&lt;br /&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h4&gt;Content table&lt;/h4&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;CREATE TABLE [content](&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[id] [int] IDENTITY(1,1) NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[name] [varchar](50) NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[created_user] [int] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[created_date] [datetime] NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[updated_user] [int] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[updated_date] [datetime] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[auth_group] [int] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[content_type] [int] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[description] [varchar](255) NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[start_date] [datetime] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[end_date] [datetime] NULL&lt;br /&gt;)&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h4&gt;Content Types lookup table&lt;/h4&gt;Note the field &#39;content_type&#39;. This is simply a classification lookup (&#39;main content&#39;, &#39;news&#39; or whatever). Part of the administrative interface, described later on&#39; allows the addition of content types, ultimately inserted into a lookup table defined as:&lt;br /&gt;&lt;br /&gt;&lt;code&gt;CREATE TABLE [dbo].[content_types](&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[id] [int] IDENTITY(1,1) NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[name] [varchar](50) NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[description] [nvarchar](255) NOT NULL&lt;br /&gt;)&lt;/code&gt;&lt;br /&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h4&gt;Groups lookup table&lt;/h4&gt;&lt;div&gt;Part of the user authorization model. More detail on this later, but essentially a User can be flagged as having permissions for objects belonging to Group &#39;x&#39; that may be different to group &#39;y&#39;. It is a very simple lookup table:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;code&gt;&lt;/code&gt;&lt;br /&gt;&lt;div&gt;&lt;div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;CREATE TABLE [dbo].[groups](&lt;/span&gt;&lt;/code&gt;&lt;/div&gt;&lt;div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[id] [int] IDENTITY(1,1) NOT NULL,&lt;/span&gt;&lt;/code&gt;&lt;/div&gt;&lt;div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[name] [varchar](50) NOT NULL,&lt;/span&gt;&lt;/code&gt;&lt;/div&gt;&lt;div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[description] [varchar](255) NOT NULL&lt;/span&gt;&lt;/code&gt;&lt;/div&gt;&lt;div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;&lt;code&gt;&lt;/code&gt;&lt;br /&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h4&gt;Content Version table&lt;/h4&gt;You will also note that the CONTENT table does not have a field for the actual content - this is managed in the one-to-many relationship to the content version table:&lt;br /&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;CREATE TABLE [dbo].[content_version](&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[id] [int] IDENTITY(1,1) NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[content_id] [int] NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[version_id] [int] NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[state_id] [int] NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[data] [text] NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[edit_user] [int] NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[updated_date] [datetime] NULL&lt;br /&gt;)&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h4&gt;State lookup table&lt;/h4&gt;Regarding the field &#39;state_id&#39;. This is also referencing a lookup table, this time holding static data, which is ultimately presented in the editorial interface:&lt;br /&gt;&lt;br /&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;CREATE TABLE [dbo].[state](&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[id] [int] IDENTITY(1,1) NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[name] [varchar](15) NOT NULL,&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[description] [varchar](255) NULL&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;User table&lt;/h4&gt;&lt;div&gt;Finally, there are a number of *_user fields. These all hold a user ID, which references the users table:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;CREATE TABLE [dbo].[users](&lt;/span&gt;&lt;/code&gt;&lt;/div&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[id] [int] IDENTITY(1,1) NOT NULL,&lt;/span&gt;&lt;/code&gt;&lt;/div&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[login] [varchar](50) NOT NULL,&lt;/span&gt;&lt;/code&gt;&lt;/div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[password] [varchar](50) NOT NULL,&lt;/span&gt;&lt;/code&gt;&lt;/div&gt;&lt;code&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[fullname] [varchar](255) NOT NULL,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[email] [varchar](50) NULL,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[active] [bit] NOT NULL,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[permissions] [int] NOT NULL,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;[groups] [varchar](255) NULL,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6aa84f;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;/code&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;So - this was my basic content model. Mapping the content to the page object and thus to the information architecture is the topic of the next few posts.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</content>
        <link rel='replies' type='application/atom+xml' href='http://jcms-consulting.blogspot.com/feeds/7774625574862290097/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='http://jcms-consulting.blogspot.com/2016/10/wcm-database-model-content-items.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/854412388978983477/posts/default/7774625574862290097'/>
        <link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/854412388978983477/posts/default/7774625574862290097'/>
        <link rel='alternate' type='text/html' href='http://jcms-consulting.blogspot.com/2016/10/wcm-database-model-content-items.html' title='WCM Database Model: Content Items'/>
        <author>
            <name>jcms-consulting</name>
            <uri>http://www.blogger.com/profile/13228951229513940000</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//4.bp.blogspot.com/-Hk0nXcIPm8Y/WAdRJsYwaAI/AAAAAAAAGvM/C0EVdcGr2yc6Qpe6_lvNhNbmhLTBsXEmACK4B/s113/logo-small-padded.jpg'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
    <entry>
        <id>tag:blogger.com,1999:blog-854412388978983477.post-7828559016097792438</id>
        <published>2016-10-08T03:56:00.001-07:00</published>
        <updated>2016-10-17T11:58:30.402-07:00</updated>
        <title type='text'>What is Web Content Management?</title>
        <content type='html'>At it&#39;s most basic, a Web Content Management (WCM) system (or Content Management System - CMS) is a tool that allows non-technical people to create content for a website. The sophistication and features on top of this basic function will depend on the need/complexity/cost...&lt;br /&gt;&lt;br /&gt;They can range from huge corporate Enterprise Content Management systems (ECM), that cater for thousands of authors, with workflows, sophisticated integrations etc., to individual blogs.&lt;br /&gt;&lt;br /&gt;This series will detail my take on a WCM by describing one that I have developed over the last few years - coded in ASP/ASP.NET.&lt;br /&gt;&lt;h3&gt;Overview&lt;/h3&gt;The basic design was to separate the content from the layout, and abstract the content hierarchy from both the content and the layout. This model gave me the flexibility to re-use content, dynamically apply a layout and quickly re-arrange the content hierarchy.&lt;br /&gt;&lt;br /&gt;Further, I implemented a state and version model for the content objects, allowing for authoring of at-work objects prior to release, and reversion to older versions if needed.&lt;br /&gt;&lt;br /&gt;I also implemented a user model that allowed for permissions masks to prevent - for example - deletion or approval of content.&lt;br /&gt;&lt;br /&gt;More recently I added a simple REST API for retrieval of content as XML or JSON, allowing AJAX integration of content.</content>
        <link rel='replies' type='application/atom+xml' href='http://jcms-consulting.blogspot.com/feeds/7828559016097792438/comments/default' title='Post Comments'/>
        <link rel='replies' type='text/html' href='http://jcms-consulting.blogspot.com/2016/10/what-is-web-content-management.html#comment-form' title='0 Comments'/>
        <link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/854412388978983477/posts/default/7828559016097792438'/>
        <link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/854412388978983477/posts/default/7828559016097792438'/>
        <link rel='alternate' type='text/html' href='http://jcms-consulting.blogspot.com/2016/10/what-is-web-content-management.html' title='What is Web Content Management?'/>
        <author>
            <name>jcms-consulting</name>
            <uri>http://www.blogger.com/profile/13228951229513940000</uri>
            <email>noreply@blogger.com</email>
            <gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//4.bp.blogspot.com/-Hk0nXcIPm8Y/WAdRJsYwaAI/AAAAAAAAGvM/C0EVdcGr2yc6Qpe6_lvNhNbmhLTBsXEmACK4B/s113/logo-small-padded.jpg'/>
        </author>
        <thr:total>0</thr:total>
    </entry>
</feed>